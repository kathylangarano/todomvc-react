name: CI / CD

on:
  push:
    branches: [main]          # producción
  pull_request:
    branches: [main]          # PRs hacia main

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

defaults:
  run:
    shell: bash

env:
  NODE_VERSION: 18         

jobs:

  # ⬱ BUILD (genera artefacto)
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Mark start
        id: t0
        run: echo "start=$(date +%s)" >> $GITHUB_OUTPUT

      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Node ${{ env.NODE_VERSION }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: npm

      - name: Install deps
        run: npm ci

      - name: Build app
        run: npm run build

      - name: Upload bundle
        uses: actions/upload-artifact@v4
        with:
          name: build
          path: build
          retention-days: 7

      - name: Save job duration
        if: always()
        run: |
          end=$(date +%s)
          echo '{"job":"${{ github.job }}","start":${{ steps.t0.outputs.start }},"end":'$end'}' > metrics.json
      - uses: actions/upload-artifact@v4
        if: always()
        with:
          name: metrics-${{ github.job }}
          path: metrics.json

  # ⬱ LINT
  lint:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Mark start
        id: t0
        run: echo "start=$(date +%s)" >> $GITHUB_OUTPUT

      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: npm
      - run: npm ci

      - name: Run Prettier (auto-fix)
        run: npx prettier --write .

      - name: Commit formatting fixes
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git add .
          git commit -m "chore: auto-format with Prettier" || echo "No changes to commit"
          git push || echo "No changes to push"

      - name: Check formatting (Prettier)
        run: npx prettier --check .

      - name: Lint (ESLint)
        run: npm run lint

      - name: Save job duration
        if: always()
        run: |
          end=$(date +%s)
          echo '{"job":"${{ github.job }}","start":${{ steps.t0.outputs.start }},"end":'$end'}' > metrics.json
      - uses: actions/upload-artifact@v4
        if: always()
        with:
          name: metrics-${{ github.job }}
          path: metrics.json

  # ⬱ UNIT TESTS
  unit:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Mark start
        id: t0
        run: echo "start=$(date +%s)" >> $GITHUB_OUTPUT

      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: npm
      - run: npm ci

      - name: Jest
        run: npm run test:unit -- --coverage

      - name: Save job duration
        if: always()
        run: |
          end=$(date +%s)
          echo '{"job":"${{ github.job }}","start":${{ steps.t0.outputs.start }},"end":'$end'}' > metrics.json
      - uses: actions/upload-artifact@v4
        if: always()
        with:
          name: metrics-${{ github.job }}
          path: metrics.json

  # ⬱ E2E TESTS
  e2e:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Mark start
        id: t0
        run: echo "start=$(date +%s)" >> $GITHUB_OUTPUT

      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: npm
      - run: npm ci

      - name: Cypress run
        uses: cypress-io/github-action@v6
        with:
          start: npm start
          wait-on: 'http://localhost:9300'
          wait-on-timeout: 120
          command: npm run cypress

      - name: Upload Cypress artifacts (on fail)
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: cypress-artifacts
          path: |
            cypress/videos
            cypress/screenshots
          retention-days: 7

      - name: Save job duration
        if: always()
        run: |
          end=$(date +%s)
          echo '{"job":"${{ github.job }}","start":${{ steps.t0.outputs.start }},"end":'$end'}' > metrics.json
      - uses: actions/upload-artifact@v4
        if: always()
        with:
          name: metrics-${{ github.job }}
          path: metrics.json

  # ⬱ DEPLOY
  deploy:
    runs-on: ubuntu-latest
    needs: [lint, unit, e2e]
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Download build artifact
        uses: actions/download-artifact@v4
        with:
          name: build
          path: build

      - name: Set up Node (scripts auxiliares)
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: npm

      - name: Deploy to S3
        uses: jakejarvis/s3-sync-action@v0.5.1
        with:
          args: --delete
        env:
          AWS_S3_BUCKET: todomvc-app.cloud
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: us-east-2
          SOURCE_DIR: build

  # ⬱ METRICS
  metrics:
    needs: [build, lint, unit, e2e, deploy]
    if: always()
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v4
        with:
          pattern: metrics-*
          path: metrics
          merge-multiple: true

      - name: Render summary
        run: |
          echo "| Job | Duración (s) |" >> $GITHUB_STEP_SUMMARY
          echo "|---|---:|" >> $GITHUB_STEP_SUMMARY
          for f in metrics/*.json; do
            d=$(jq -r '(.end - .start|tostring)' "$f")
            j=$(jq -r '.job' "$f")
            echo "| $j | $d |" >> $GITHUB_STEP_SUMMARY
          done
