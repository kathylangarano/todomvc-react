name: CI / CD

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

# El bot necesitará permiso para hacer push
permissions:
  contents: write

env:
  NODE_VERSION: 18           # cambia aquí si subes de versión

# ➊ BUILD (genera el artefacto que usarán los demás jobs)
jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: ⤵️  Checkout
        uses: actions/checkout@v4

      - name: 🟢  Set up Node ${{ env.NODE_VERSION }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: npm

      - name: 📦  Install deps
        run: npm ci

      - name: 🛠️  Build app
        run: npm run build

      - name: 📤  Upload build artifact
        uses: actions/upload-artifact@v4
        with:
          name: build
          path: build
          retention-days: 7

# ➋ LINT + AUTO‑FIX (paralelo)
  lint:
    runs-on: ubuntu-latest
    needs: build
    # evita volver a ejecutarse sobre el commit del bot
    if: github.actor != 'github-actions[bot]'

    steps:
      - name: ⤵️  Checkout
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: 🟢  Set up Node
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: npm

      - name: 📦  Install deps
        run: npm ci

      # ╭──────────────────────────────────────────────╮
      # │ 1) AUTO‑FORMATEO CON PRETTIER ‑‑write        │
      # ╰──────────────────────────────────────────────╯
      - name: 🔧 Prettier auto‑fix
        run: npx prettier --write .

      # 2) Si hubo cambios, los commitea y pushea (con [skip ci])
      - name: ⬆️  Commit & push (si cambió algo)
        id: commit
        run: |
          if [[ $(git status --porcelain) != "" ]]; then
            git config --global user.name  "github-actions[bot]"
            git config --global user.email "github-actions[bot]@users.noreply.github.com"
            git add -A
            git commit -m "chore(style): auto‑format with Prettier [skip ci]"
            git push
            echo "pushed=true" >> $GITHUB_OUTPUT
          else
            echo "pushed=false" >> $GITHUB_OUTPUT
          fi

      # 3) Verificación final (solo si NO hubo push)
      - name: 🔍 Prettier check
        if: steps.commit.outputs.pushed == 'false'
        run: npx prettier --check .

      - name: 🔍 ESLint
        if: steps.commit.outputs.pushed == 'false'
        run: npm run lint

# ➋ UNIT TESTS (paralelo)
  unit:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: npm
      - run: npm ci
      - name: 🧪 Jest
        run: npm run test:unit -- --coverage

# ➋ E2E TESTS (paralelo)
  e2e:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: npm
      - run: npm ci
      - name: ⚙️  Cypress run
        uses: cypress-io/github-action@v6
        with:
          start: npm start
          wait-on: 'http://localhost:9300'
          wait-on-timeout: 120
          command: npm run cypress
      - name: 📤  Upload Cypress artifacts
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: cypress-artifacts
          path: |
            cypress/videos
            cypress/screenshots
          retention-days: 7

# ➌ DEPLOY (solo si TODO lo anterior pasó y es push directo a main)
  deploy:
    runs-on: ubuntu-latest
    needs: [lint, unit, e2e]
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'

    steps:
      - uses: actions/checkout@v4

      - name: ⬇️  Download build artifact
        uses: actions/download-artifact@v4
        with:
          name: build
          path: build

      - name: 🟢  Set up Node
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: npm

      - name: 🚀 Deploy to S3
        uses: jakejarvis/s3-sync-action@v0.5.1
        with:
          args: --delete
        env:
          AWS_S3_BUCKET: todomvc-app.cloud
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: us-east-2
          SOURCE_DIR: build
